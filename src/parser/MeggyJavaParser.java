
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Sep 28 11:47:51 EDT 2015
//----------------------------------------------------

import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Sep 28 11:47:51 EDT 2015
  */
public class MeggyJavaParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MeggyJavaParser() {super();}

  /** Constructor which sets the default scanner. */
  public MeggyJavaParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MeggyJavaParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\011\000\002\006\002\000\002\002\010\000\002\002" +
    "\004\000\002\007\002\000\002\003\024\000\002\004\013" +
    "\000\002\005\006\000\002\005\003\000\002\005\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\052\000\004\056\005\001\002\000\004\002\054\001" +
    "\002\000\004\057\006\001\002\000\004\024\007\001\002" +
    "\000\004\047\001\001\002\000\004\047\012\001\002\000" +
    "\004\024\053\001\002\000\004\036\013\001\002\000\004" +
    "\020\ufffe\001\002\000\004\020\015\001\002\000\004\043" +
    "\016\001\002\000\004\045\017\001\002\000\004\031\020" +
    "\001\002\000\004\037\021\001\002\000\004\016\022\001" +
    "\002\000\004\035\023\001\002\000\004\022\024\001\002" +
    "\000\004\023\025\001\002\000\004\036\026\001\002\000" +
    "\004\017\027\001\002\000\004\020\030\001\002\000\004" +
    "\060\032\001\002\000\004\021\051\001\002\000\004\016" +
    "\033\001\002\000\010\016\037\052\035\053\034\001\002" +
    "\000\006\014\ufff9\017\ufff9\001\002\000\006\014\ufffa\017" +
    "\ufffa\001\002\000\004\014\043\001\002\000\004\027\040" +
    "\001\002\000\004\017\041\001\002\000\010\016\037\052" +
    "\035\053\034\001\002\000\006\014\ufffb\017\ufffb\001\002" +
    "\000\010\016\037\052\035\053\034\001\002\000\004\014" +
    "\045\001\002\000\010\016\037\052\035\053\034\001\002" +
    "\000\004\017\047\001\002\000\004\024\050\001\002\000" +
    "\004\021\ufffc\001\002\000\004\021\052\001\002\000\004" +
    "\024\ufffd\001\002\000\004\002\000\001\002\000\004\002" +
    "\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\052\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\007\001\001" +
    "\000\004\003\010\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\013\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\030\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\035\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\041\001\001\000\002\001" +
    "\001\000\004\005\043\001\001\000\002\001\001\000\004" +
    "\005\045\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MeggyJavaParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MeggyJavaParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MeggyJavaParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 2;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 scanner.init();   StringBuffer text = new StringBuffer(); 
    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return scanner.next_token(); 
    }
}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MeggyJavaParser$actions {
  private final MeggyJavaParser parser;

  /** Constructor */
  CUP$MeggyJavaParser$actions(MeggyJavaParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MeggyJavaParser$do_action(
    int                        CUP$MeggyJavaParser$act_num,
    java_cup.runtime.lr_parser CUP$MeggyJavaParser$parser,
    java.util.Stack            CUP$MeggyJavaParser$stack,
    int                        CUP$MeggyJavaParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MeggyJavaParser$result;

      /* select the action based on the action number */
      switch (CUP$MeggyJavaParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Expression ::= COLOR_LITERAL 
            {
              Object RESULT =null;
		int colorExprleft = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).left;
		int colorExprright = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).right;
		COLOR colorExpr = (COLOR)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.peek()).value;
		 text.append(colorExpr.value());  
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("Expression",3, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Expression ::= INT_LITERAL 
            {
              Object RESULT =null;
		int intExprleft = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).left;
		int intExprright = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).right;
		INT intExpr = (INT)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.peek()).value;
		 text.append(intExpr.intValue());  
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("Expression",3, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Expression ::= LPAREN BYTE RPAREN Expression 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.peek()).value;
		 text.append("(byte)" + e.value()); 
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("Expression",3, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-3)), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Statement ::= MEGGYSETPIXEL LPAREN Expression COMMA Expression COMMA Expression RPAREN SEMI 
            {
              Object RESULT =null;
		int e0left = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-6)).left;
		int e0right = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-6)).right;
		Object e0 = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-6)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-4)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-4)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-4)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-2)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-2)).value;
		 text.append("Meggy.setPixel( " + e0.value() + " , " + e1.value() + " , " + e2.value() + " );\n");  
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("Statement",2, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-8)), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // MainClass ::= CLASS IDENTIFIER NT$1 LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET IDENTIFIER RPAREN LBRACE Statement RBRACE RBRACE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-15)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-16)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-16)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-16)).value;

              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("MainClass",1, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-17)), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NT$1 ::= 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.peek()).value;
 test.append("class " + id.value() + "\n"); 
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("NT$1",5, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // $START ::= Goal EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-1)).value;
		RESULT = start_val;
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-1)), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MeggyJavaParser$parser.done_parsing();
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Goal ::= IMPORT MEGGY SEMI NT$0 MainClass SEMI 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-2)).value;
		 text.append(";\n"); 
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("Goal",0, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.elementAt(CUP$MeggyJavaParser$top-5)), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // NT$0 ::= 
            {
              Object RESULT =null;
 text.append("import meggy.Meggy;");  
              CUP$MeggyJavaParser$result = parser.getSymbolFactory().newSymbol("NT$0",4, ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MeggyJavaParser$stack.peek()), RESULT);
            }
          return CUP$MeggyJavaParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

